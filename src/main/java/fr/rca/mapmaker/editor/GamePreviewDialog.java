
package fr.rca.mapmaker.editor;

import fr.rca.mapmaker.model.map.TileMap;
import fr.rca.mapmaker.preferences.PreferencesManager;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JViewport;

/**
 *
 * @author RaphaÃ«l Calabro <raph_kun at yahoo.fr>
 */
public class GamePreviewDialog extends javax.swing.JDialog {
	
	private final static Dimension[] DIMENSIONS = {
		new Dimension(320, 240),
		new Dimension(568, 320),
		new Dimension(960, 544),
	};

	/**
	 * Creates new form GamePreviewDialog
	 */
	public GamePreviewDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		
		deviceComboBox.setSelectedIndex(PreferencesManager.getInt(PreferencesManager.LAST_GAME_PREVIEW_DIMENSION));
		setDimension(PreferencesManager.getInt(PreferencesManager.LAST_GAME_PREVIEW_DIMENSION));
		zoomTextField.setText(PreferencesManager.get(PreferencesManager.LAST_GAME_PREVIEW_ZOOM, "100"));
		
		addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosed(WindowEvent e) {
				PreferencesManager.set(PreferencesManager.LAST_GAME_PREVIEW_DIMENSION, deviceComboBox.getSelectedIndex());
				PreferencesManager.set(PreferencesManager.LAST_GAME_PREVIEW_ZOOM, zoomTextField.getText());
			}
			
		});
	}
	
	public void setTileMap(TileMap tileMap) {
		previewGrid.setTileMap(tileMap);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        toolBar = new javax.swing.JToolBar();
        deviceComboBox = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        zoomTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        gridScrollPane = new javax.swing.JScrollPane();
        previewGrid = new fr.rca.mapmaker.ui.Grid();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        toolBar.setFloatable(false);
        toolBar.setRollover(true);

        deviceComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "320x240", "iPhone 5 (568x320)", "Playstation Vita (960x544)" }));
        deviceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deviceComboBoxActionPerformed(evt);
            }
        });
        toolBar.add(deviceComboBox);
        toolBar.add(jSeparator1);

        jLabel1.setText("Zoom");
        toolBar.add(jLabel1);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, previewGrid, org.jdesktop.beansbinding.ELProperty.create("${zoomAsInteger}"), zoomTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        toolBar.add(zoomTextField);

        jLabel2.setText("%");
        toolBar.add(jLabel2);

        gridScrollPane.getViewport().setScrollMode(JViewport.SIMPLE_SCROLL_MODE);

        previewGrid.setViewport(gridScrollPane.getViewport());
        gridScrollPane.setViewportView(previewGrid);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gridScrollPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gridScrollPane)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deviceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deviceComboBoxActionPerformed
		final int selection = deviceComboBox.getSelectedIndex();
		if(selection >= 0) {
			setDimension(selection);
		}
    }//GEN-LAST:event_deviceComboBoxActionPerformed

	private void setDimension(int entry) {
		final Dimension dimension = DIMENSIONS[entry];
		gridScrollPane.setPreferredSize(dimension);
		gridScrollPane.setSize(dimension);
		pack();
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox deviceComboBox;
    private javax.swing.JScrollPane gridScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private fr.rca.mapmaker.ui.Grid previewGrid;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JTextField zoomTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
