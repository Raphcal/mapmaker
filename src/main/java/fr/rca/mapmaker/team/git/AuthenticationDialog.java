package fr.rca.mapmaker.team.git;

import fr.rca.mapmaker.preferences.PreferencesManager;
import java.util.ResourceBundle;
import javax.swing.JButton;
import org.eclipse.jgit.api.GitCommand;
import org.eclipse.jgit.api.PullCommand;
import org.eclipse.jgit.api.PushCommand;
import org.eclipse.jgit.api.TransportCommand;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 *
 * @author Raphaël Calabro (raphael.calabro@netapsys.fr)
 */
public class AuthenticationDialog extends javax.swing.JDialog {
	private static final ResourceBundle LANGUAGE = ResourceBundle.getBundle("resources/language"); // NO18N
	
	private static final String GIT_PREFIX = "git.";
	private static final String LOGIN_SUFFIX = ".login";
	private static final String PASSWORD_SUFFIX = ".password";
	
	private final String remoteName;
	private final String workTreePath;
	
	/**
	 * Creates new form AuthenticationDialog
	 * @param <C> Type de la commande git.
	 * @param <T> 
	 * @param parent Fenêtre parente.
	 * @param command Commande à exécuter avec authentification.
	 */
	public <C extends GitCommand, T> AuthenticationDialog(java.awt.Frame parent, TransportCommand<C, T> command) {
		super(parent, false);
		this.remoteName = getRemote(command);
		this.workTreePath = command.getRepository().getWorkTree().getPath();
		initComponents();
		
		final String login = PreferencesManager.get("git." + workTreePath + ".login");
		final String password = PreferencesManager.get("git." + workTreePath + ".password");
		loginField.setText(login);
		passwordField.setText(password);
		rememberCheckBox.setSelected(login != null || password != null);
	}
	
	@Nullable
	private <C extends GitCommand, T> String getRemote(TransportCommand<C, T> command) {
		if(command instanceof PushCommand) {
			return ((PushCommand) command).getRemote();
			
		} else if(command instanceof PullCommand) {
			return ((PullCommand) command).getRemote();
			
		} else {
			return null;
		}
	}
	
	@Nullable
	public String getRemoteName() {
		return remoteName;
	}
	
	@NotNull
	public String getLogin() {
		return loginField.getText();
	}
	
	@NotNull
	public char[] getPassword() {
		return passwordField.getPassword();
	}
	
	public boolean mustRememberPassword() {
		return rememberCheckBox.isSelected();
	}

	public JButton getOkButton() {
		return okButton;
	}

	public JButton getCancelButton() {
		return cancelButton;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inviteLabel = new javax.swing.JLabel();
        loginLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        loginField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        rememberCheckBox = new javax.swing.JCheckBox();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        inviteLabel.setText(java.text.MessageFormat.format(LANGUAGE.getString("team.git.authenticate"), new Object[] {getRemoteName()})); // NOI18N

        loginLabel.setText(LANGUAGE.getString("team.git.login")); // NOI18N

        passwordLabel.setText(LANGUAGE.getString("team.git.password")); // NOI18N

        rememberCheckBox.setText(LANGUAGE.getString("team.git.savecredentials")); // NOI18N

        okButton.setText(LANGUAGE.getString("button.ok")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(LANGUAGE.getString("button.cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inviteLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordLabel)
                            .addComponent(loginLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(rememberCheckBox)
                            .addComponent(loginField)
                            .addComponent(passwordField)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(cancelButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(okButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inviteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginLabel)
                    .addComponent(loginField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rememberCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
		setVisible(false);
		
		if(mustRememberPassword()) {
			PreferencesManager.set(GIT_PREFIX + workTreePath + LOGIN_SUFFIX, getLogin());
			PreferencesManager.set(GIT_PREFIX + workTreePath + PASSWORD_SUFFIX, new String(getPassword()));
		} else {
			PreferencesManager.remove(GIT_PREFIX + workTreePath + LOGIN_SUFFIX);
			PreferencesManager.remove(GIT_PREFIX + workTreePath + PASSWORD_SUFFIX);
		}
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel inviteLabel;
    private javax.swing.JTextField loginField;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JCheckBox rememberCheckBox;
    // End of variables declaration//GEN-END:variables
}
